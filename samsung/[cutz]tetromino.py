import sys


rl = lambda: sys.stdin.readline()

all_map = []
N, M = map(int, rl().split())
for _ in range(N):
    all_map.append(list(map(int, rl().split())))

tetromino = [
    # ㅡ, ㅣ
    [(0, 0),(0, 1),(0, 2),(0, 3)], [(0, 0),(1, 0),(2, 0),(3, 0)],
    # # ㅁ
    [(0, 0),(0, 1),(1, 0),(1, 1)],
    # # ㄴ
    [(0, 0),(1, 0),(2, 0),(2, 1)], [(0, 0),(1, 0),(0, 1),(0, 2)], [(0, 0),(0, 1),(1, 1),(2, 1)], [(0, 0),(1, 0),(1, -1),(1, -2)],
    # ㄴ 대칭
    [(0, 0),(0, 1),(-1, 1),(-2, 1)], [(0, 0),(1, 0),(1, 1),(1, 2)], [(0, 0),(1, 0),(2, 0),(0, 1)], [(0, 0),(0, 1),(0, 2),(1, 2)],
    # ㅓ
    [(0, 0),(0, 1),(1, 1),(1, 2)], [(0, 0),(1, 0),(1, -1),(2, -1)], [(0, 0),(1, 0),(1, 1),(2, 1)], [(0, 0),(0, -1),(1, -1),(1, -2)],
    [(0, 0),(0, 1),(0, 2),(1, 1)], [(0, 0),(0, 1),(0, 2),(-1, 1)], [(0, 0),(0, 1),(-1, 1),(1, 1)], [(0, 0),(1, 0),(2, 0),(1, 1)]
]

res = 0
for i in range(N):
    for j in range(M):
        for t in tetromino:
            tmp, cnt = 0, 0
            for t_y, t_x in t:
                new_i, new_j = i + t_y, j + t_x
                if (0 <= new_i < N) and (0 <= new_j < M):
                    tmp += all_map[new_i][new_j]
                    cnt += 1
                else:
                    break
            if cnt == 4:
                if tmp > res:
                    res = tmp

print(res)

